<p class="trail"><%= @account.name %> Plans</p>
<p><a id="new" href="">Add new row</a></p>

  <table id="plans-index" class="dataTable">
    <thead>
      <tr>
        <th>Code</th>
        <th>Name</th>
        <th>Description</th>
        <th><%= current_account.service == 'supplier' ? 'Seller' : 'Supplier' %></th>
        <th>Start</th>
        <th>End</th>
        <th>Level</th>
        <th>Expense</th>
        <th>Volume</th>
        <th>Rate</th>
        <th>Edit</th>
        <th>Delete</th>
        
      </tr>
    </thead>
    <tbody>
      

      <% if @plans %>
        <% @plans.each do |plan| %>
          <tr>
            <td><%= plan.code %></td>
            <td><%= plan.name %></td>
            <td><%= plan.descr %></td>
            <td><%= render :partial => "service", :locals => { :plan => plan } %></td>
            <td><%= plan.start_date %></td>
            <td><%= plan.end_date %></td>
            <td>
              <table>
                <tr>
                  <td>Plan</td>
                </tr>
                <tr>
                  <td><%= link_to "Programs", plan_programs_path(plan) %></td>
                </tr>
                <tr>
                  <td>Deals</td>
                </tr>
              </table>
            </td>
            <td>
              <table>
                <tr>
                  <td class="number_field"><%= currency_zero(plan.budget_expense) %></td>
                </tr>
                <tr>
                  <td class="number_field"><%= currency_zero(plan.program_expense) %></td>
                </tr>
                <tr>
                  <td class="number_field"><%= currency_zero(plan.deal_volume * plan.deal_rate) %></td>
                </tr>
              </table>
            </td>
            <td>
              <table>
                <tr>
                  <td class="number_field"><%= float_zero(plan.budget_volume ||= 0) %></td>
                </tr>
                <tr>
                  <td class="number_field"><%= float_zero(plan.program_volume) %></td>
                </tr>
                <tr>
                  <td class="number_field"><%= float_zero(plan.deal_volume) %></td>
                </tr>
              </table>
            </td>
            <td>
              <table>
                <tr>
                  <td class="number_field"><%= currency_two(plan.budget_volume ? plan.budget_expense / plan.budget_volume : 0) %>
                </tr>
                <tr>
                  <td class="number_field"><%= currency_two(plan.program_expense / plan.program_volume) %></td>
                </tr>
                <tr>
                  <td class="number_field"><%= currency_two(plan.deal_rate) %></td>
                </tr>
              </table>
            </td>
            <td><a class="edit" href="">Edit</a></td>
            <td><a class="delete" href="">Delete</a></td>
          </tr>
        <% end %>
      <% end %>

      
    </tbody>
  </table>


    
<script>
  $(document).ready(function() {
    var oTable = $('#plans-index').dataTable({
      "bJQueryUI": true,
      "sScrollY": "500px",
     "bPaginate": false
    });
    
    var nEditing = null;
    
    $('#plans-index a.edit').live('click', function (e) {
        e.preventDefault();
        
        /* Get the row as a parent of the link that was clicked on */
        var nRow = $(this).parents('tr')[0];
         
        if ( nEditing !== null && nEditing != nRow ) {
            /* A different row is being edited - the edit should be cancelled and this row edited */
            restoreRow( oTable, nEditing );
            editRow( oTable, nRow );
            nEditing = nRow;
        }
        else if ( nEditing == nRow && this.innerHTML == "Save" ) {
            /* This row is being edited and should be saved */
            saveRow( oTable, nEditing );
            nEditing = null;
        }
        else {
            /* No row currently being edited */
            editRow( oTable, nRow );
            nEditing = nRow;
        }
        oTable.fnAdjustColumnSizing(true);
    } );
    
      $('#new').click( function (e) {
        e.preventDefault();

        var aiNew = oTable.fnAddData( [ '', '', '', '', '', '', '', '', '', '', 
            '<a class="edit" href="">Edit</a>', '<a class="delete" href="">Delete</a>' ] );
        var nRow = oTable.fnGetNodes( aiNew[0] );
        editRow( oTable, nRow );
        nEditing = nRow;
        oTable.fnAdjustColumnSizing(true);
    } );
    
    $('#plans-index a.delete').live('click', function (e) {
        e.preventDefault();

        var nRow = $(this).parents('tr')[0];
        oTable.fnDeleteRow( nRow );
    } );
    
  } );
  
function editRow ( oTable, nRow )
{
    var aData = oTable.fnGetData(nRow);
    var jqTds = $('>td', nRow);
    jqTds[0].innerHTML = '<input type="text" value="'+aData[0]+'">';
    jqTds[1].innerHTML = '<input type="text" value="'+aData[1]+'">';
    jqTds[2].innerHTML = '<input type="text" value="'+aData[2]+'">';
    jqTds[3].innerHTML = '<input type="text" value="'+aData[3]+'">';
    jqTds[4].innerHTML = '<input type="text" value="'+aData[4]+'">';
    jqTds[5].innerHTML = '<input type="text" value="'+aData[5]+'">';
    
    jqTds[10].innerHTML = '<a class="edit" href="">Save</a>';
}

function saveRow ( oTable, nRow )
{
    var jqInputs = $('input', nRow);
    oTable.fnUpdate( jqInputs[0].value, nRow, 0, false );
    oTable.fnUpdate( jqInputs[1].value, nRow, 1, false );
    oTable.fnUpdate( jqInputs[2].value, nRow, 2, false );
    oTable.fnUpdate( jqInputs[3].value, nRow, 3, false );
    oTable.fnUpdate( jqInputs[4].value, nRow, 4, false );
    oTable.fnUpdate( jqInputs[5].value, nRow, 5, false );
    
    oTable.fnUpdate( '<a class="edit" href="">Edit</a>', nRow, 10, false );
    oTable.fnDraw();
}

function restoreRow ( oTable, nRow )
{
	var aData = oTable.fnGetData(nRow);
	var jqTds = $('>td', nRow);
	
	for ( var i=0, iLen=jqTds.length ; i<iLen ; i++ ) {
		oTable.fnUpdate( aData[i], nRow, i, false );
	}
	
	oTable.fnDraw();
}

</script>